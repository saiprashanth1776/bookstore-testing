{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\bookstore\\\\src\\\\components\\\\BookEntry.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Image } from 'semantic-ui-react';\nimport Gallery from 'react-grid-gallery';\nexport const BookEntry = () => {\n  const [title, setTitle] = useState(''); //  Empty String\n\n  const [outputURL1, setOutputURL1] = useState('');\n  const [outputURL2, setOutputURL2] = useState('');\n  const [outputURL3, setOutputURL3] = useState('');\n  const [outputURL4, setOutputURL4] = useState('');\n  const [outputURL5, setOutputURL5] = useState('');\n  var nameArr = [];\n  const IMAGES = [{\n    src: {\n      outputURL1\n    },\n    thumbnail: {\n      outputURL1\n    },\n    thumbnailWidth: 400,\n    thumbnailHeight: 320,\n    isSelected: true\n  }, {\n    src: {\n      outputURL2\n    },\n    thumbnail: {\n      outputURL2\n    },\n    thumbnailWidth: 150,\n    thumbnailHeight: 320,\n    isSelected: true\n  }, {\n    src: {\n      outputURL3\n    },\n    thumbnail: {\n      outputURL3\n    },\n    thumbnailWidth: 150,\n    thumbnailHeight: 320,\n    isSelected: true\n  }, {\n    src: {\n      outputURL4\n    },\n    thumbnail: {\n      outputURL4\n    },\n    thumbnailWidth: 150,\n    thumbnailHeight: 320,\n    isSelected: true\n  }, {\n    src: {\n      outputURL5\n    },\n    thumbnail: {\n      outputURL5\n    },\n    thumbnailWidth: 150,\n    thumbnailHeight: 320,\n    isSelected: true\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter one of your favorite book titles \",\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: async () => {\n      const book = {\n        title\n      };\n      const response = await fetch(\"/input_book\", {\n        method: \"POST\",\n        headers: {\n          \"Content_Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      });\n\n      if (response.ok) {\n        var form = document.getElementById(\"form\"); // console.log(\"Response Worked! \");\n        // console.log(JSON.stringify(response.url));\n        // console.log(response);\n\n        setTitle(\"We found your favorite book!\");\n        fetch(\"/novel_novel\").then(response => response.json().then(data => {\n          nameArr = data.image_url.split(\";\");\n          setOutputURL1(nameArr[0]);\n          setOutputURL2(nameArr[1]);\n          setOutputURL3(nameArr[2]);\n          setOutputURL4(nameArr[3]);\n          setOutputURL5(nameArr[4]); // console.log(outputURL)\n        }));\n      } else {\n        console.log(\"Title not found\");\n        setTitle(\"We did not find this title. Please try again!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(Gallery, {\n    images: IMAGES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["D:/react/bookstore/src/components/BookEntry.js"],"names":["React","useState","Form","Input","Button","Image","Gallery","BookEntry","title","setTitle","outputURL1","setOutputURL1","outputURL2","setOutputURL2","outputURL3","setOutputURL3","outputURL4","setOutputURL4","outputURL5","setOutputURL5","nameArr","IMAGES","src","thumbnail","thumbnailWidth","thumbnailHeight","isSelected","event","target","value","book","response","fetch","method","headers","body","JSON","stringify","ok","form","document","getElementById","then","json","data","image_url","split","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, Image } from 'semantic-ui-react';\r\nimport Gallery from 'react-grid-gallery';\r\n\r\nexport const BookEntry = ()  => {\r\n  const [title, setTitle] = useState(''); //  Empty String\r\n  const [outputURL1, setOutputURL1] = useState('');\r\n  const [outputURL2, setOutputURL2] = useState('');\r\n  const [outputURL3, setOutputURL3] = useState('');\r\n  const [outputURL4, setOutputURL4] = useState('');\r\n  const [outputURL5, setOutputURL5] = useState('');\r\n  var nameArr = [];\r\n\r\n  const IMAGES = [{\r\n          src: {outputURL1},\r\n          thumbnail: {outputURL1},\r\n          thumbnailWidth: 400,\r\n          thumbnailHeight: 320,\r\n          isSelected: true,\r\n        },\r\n        {\r\n          src: {outputURL2},\r\n          thumbnail: {outputURL2},\r\n          thumbnailWidth: 150,\r\n          thumbnailHeight: 320,\r\n          isSelected: true,\r\n        },\r\n        {\r\n          src: {outputURL3},\r\n          thumbnail: {outputURL3},\r\n          thumbnailWidth: 150,\r\n          thumbnailHeight: 320,\r\n          isSelected: true,\r\n        },\r\n        {\r\n          src: {outputURL4},\r\n          thumbnail: {outputURL4},\r\n          thumbnailWidth: 150,\r\n          thumbnailHeight: 320,\r\n          isSelected: true,\r\n        },\r\n        {\r\n          src: {outputURL5},\r\n          thumbnail: {outputURL5},\r\n          thumbnailWidth: 150,\r\n          thumbnailHeight: 320,\r\n          isSelected: true,\r\n        }\r\n      ]\r\n\r\n  return (\r\n  <div id=\"form\">\r\n    <Form>\r\n      <Form.Field>\r\n        <Input\r\n        placeholder=\"Enter one of your favorite book titles \"\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <Button onClick= {async () => {\r\n          const book = {title};\r\n          const response = await fetch(\"/input_book\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content_Type\": \"application/json\"\r\n            },\r\n            body:\r\n              JSON.stringify(book)\r\n            })\r\n\r\n          if (response.ok) {\r\n            var form = document.getElementById(\"form\") \r\n            // console.log(\"Response Worked! \");\r\n            // console.log(JSON.stringify(response.url));\r\n            // console.log(response);\r\n            setTitle(\"We found your favorite book!\")\r\n            fetch(\"/novel_novel\").then(response =>\r\n              response.json().then(data => {\r\n              nameArr = data.image_url.split(\";\")\r\n\r\n              setOutputURL1(nameArr[0]);\r\n              setOutputURL2(nameArr[1]);\r\n              setOutputURL3(nameArr[2]);\r\n              setOutputURL4(nameArr[3]);\r\n              setOutputURL5(nameArr[4]);\r\n                  // console.log(outputURL)\r\n              })\r\n            ); \r\n          }\r\n          else {\r\n            console.log(\"Title not found\")\r\n            setTitle(\"We did not find this title. Please try again!\")\r\n          } \r\n        }\r\n      }>\r\n        Add</Button>\r\n      </Form.Field>\r\n    </Form>\r\n    <Gallery images={IMAGES}/>\r\n  </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}