{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport WindowController from './src/controllers/window-controller';\nimport SWController from './src/controllers/sw-controller';\nimport { firebase } from '@firebase/app';\nexport function registerMessaging(instance) {\n  var messagingName = 'messaging';\n\n  var factoryMethod = function (app) {\n    if (self && 'ServiceWorkerGlobalScope' in self) {\n      return new SWController(app);\n    } // Assume we are in the window context.\n\n\n    return new WindowController(app);\n  };\n\n  var namespaceExports = {\n    // no-inline\n    Messaging: WindowController\n  };\n  instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\n}\nregisterMessaging(firebase);","map":{"version":3,"sources":["../index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA;;AAEA,OAAO,gBAAP,MAA6B,qCAA7B;AACA,OAAO,YAAP,MAAyB,iCAAzB;AACA,SAAS,QAAT,QAAyB,eAAzB;AAGA,OAAM,SAAA,iBAAA,CAA4B,QAA5B,EAAoC;AACxC,MAAM,aAAa,GAAG,WAAtB;;AACA,MAAM,aAAa,GAAG,UAAA,GAAA,EAAG;AACvB,QAAI,IAAI,IAAI,8BAA8B,IAA1C,EAAgD;AAC9C,aAAO,IAAI,YAAJ,CAAiB,GAAjB,CAAP;AACD,KAHsB,CAKvB;;;AACA,WAAO,IAAI,gBAAJ,CAAqB,GAArB,CAAP;AACD,GAPD;;AASA,MAAM,gBAAgB,GAAG;AACvB;AACA,IAAA,SAAS,EAAE;AAFY,GAAzB;AAKA,EAAA,QAAQ,CAAC,QAAT,CAAkB,eAAlB,CACE,aADF,EAEE,aAFF,EAGE,gBAHF;AAKD;AAED,iBAAiB,CAAC,QAAD,CAAjB","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport WindowController from './src/controllers/window-controller';\nimport SWController from './src/controllers/sw-controller';\nimport { firebase } from '@firebase/app';\nimport * as types from '@firebase/messaging-types';\n\nexport function registerMessaging(instance) {\n  const messagingName = 'messaging';\n  const factoryMethod = app => {\n    if (self && 'ServiceWorkerGlobalScope' in self) {\n      return new SWController(app);\n    }\n\n    // Assume we are in the window context.\n    return new WindowController(app);\n  };\n\n  const namespaceExports = {\n    // no-inline\n    Messaging: WindowController\n  };\n\n  instance.INTERNAL.registerService(\n    messagingName,\n    factoryMethod,\n    namespaceExports\n  );\n}\n\nregisterMessaging(firebase);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    messaging?: {\n      (app?: FirebaseApp): types.FirebaseMessaging;\n      Messaging: typeof types.FirebaseMessaging;\n    };\n  }\n  interface FirebaseApp {\n    messaging?(): types.FirebaseMessaging;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}